---
- name: Deploy Redpanda with cert-manager and operator
  hosts: all
  become: true
  tasks:
    - name: Check if user can create CRDs
      command: kubectl auth can-i create CustomResourceDefinition --all-namespaces
      register: crd_check

    - name: Fail if CRD permissions are not granted
      fail:
        msg: "You do not have permissions to create CustomResourceDefinition."
      when: crd_check.stdout != "yes"

    - name: Add jetstack Helm repo
      command: helm repo add jetstack https://charts.jetstack.io

    - name: Update Helm repos
      command: helm repo update

    - name: Install cert-manager
      command: >
        helm upgrade --install cert-manager jetstack/cert-manager
        --set crds.enabled=true
        --namespace cert-manager
        --create-namespace

    - name: Clone Redpanda Operator CRDs locally
      git:
        repo: https://github.com/redpanda-data/redpanda-operator
        dest: /tmp/redpanda-operator
        version: v2.4.2
        depth: 1

    - name: Apply Redpanda Operator CRDs from local path
      shell: |
        kubectl kustomize /tmp/redpanda-operator/operator/config/crd | kubectl apply --server-side -f -
      args:
        executable: /bin/bash

    - name: Add Redpanda Helm repo
      command: helm repo add redpanda https://charts.redpanda.com

    - name: Upgrade/install Redpanda controller
      command: >
        helm upgrade --install redpanda-controller redpanda/operator
        --namespace redpanda
        --create-namespace
        --version v2.4.2

    - name: Wait for Redpanda controller rollout
      command: kubectl --namespace redpanda rollout status --watch deployment/redpanda-controller-operator

    - name: Create ConfigMap for redpanda-io-config
      command: >
        kubectl create configmap redpanda-io-config
        --namespace redpanda
        --from-file=/etc/redpanda/io-config.yaml
      args:
        creates: /tmp/created_redpanda_io_config_cm
      register: configmap_create_result
      ignore_errors: yes

    - name: Touch file to mark configmap created
      file:
        path: /tmp/created_redpanda_io_config_cm
        state: touch
      when: configmap_create_result.rc == 0

    - name: Create redpanda-cluster.yaml
      copy:
        dest: ./redpanda-cluster.yaml
        content: |
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: redpanda
          spec:
            clusterSpec:
              statefulset:
                extraVolumes: |-
                  - name: redpanda-io-config
                    configMap:
                      name: redpanda-io-config
                extraVolumeMounts: |-
                  - name: redpanda-io-config
                    mountPath: /etc/redpanda-io-config
                additionalRedpandaCmdFlags:
                  - "--io-properties-file=/etc/redpanda-io-config/io-config.yaml"

    - name: Apply Redpanda CR
      command: kubectl apply -f ./redpanda-cluster.yaml --namespace redpanda

    - name: Wait for Redpanda resource readiness
      shell: |
        kubectl get redpanda --namespace redpanda --watch
      async: 300
      poll: 0

    - name: Show Redpanda pods
      command: kubectl get pods --namespace redpanda
      register: pod_list

    - name: Print Redpanda pods
      debug:
        msg: "{{ pod_list.stdout_lines }}"

    - name: Check which node each Redpanda pod is on
      command: >
        kubectl get pod --namespace redpanda -o=custom-columns=NODE:.spec.nodeName,NAME:.metadata.name -l app.kubernetes.io/component=redpanda-statefulset
      register: node_map

    - name: Print pod to node mapping
      debug:
        msg: "{{ node_map.stdout_lines }}"
